// defines.h
#define SETBIT(WORD,BIT) WORD =(1<<BIT)
#define SETBYTE(WORD,BITSTARTPOS) WORD =(0XFF<<BITSTARTPOS)
#define CLRBIT(WORD,BIT) WORD &=~(1<<BIT)
#define CPLBIT(WORD,BIT) WORD^=(1<<BIT)
#define READBIT(WORD,BIT) ((WORD>>BIT)&1)
#define WRITEBIT(WORD,BITPOS,BIT) WORD=((WORD&~(1<<BITPOS)) |(BIT<<BITPOS))
#define WRITENIBBLE(WORD,BITSTARTPOS,NIBBLE) WORD=((WORD&~(15<<BITSTARTPOS)) | (NIBBLE<<BITSTARTPOS))
#define READNIBBLE(WORD,BITSTARTPOS) ((WORD>>BITSTARTPOS)&15)
#define READBYTE(WORD,BITSTARTPOS) ((WORD>>BITSTARTPOS)&255)
#define READWRITEBIT(DWORD,DBIT,SWORD,SBIT) ((DWORD&~(1<<DBIT))|((SWORD>>SBIT)&1)<<DBIT)
#define WRITEBYTE(WORD,BITSTARTPOS,BYTE) WORD=((WORD&~(0xFFu<<BITSTARTPOS)) | (BYTE<<BITSTARTPOS))
